define([vuejsUrl], function(Vue) {
    const html = `
    <div class="seg" v-cloak>
    <div class="title">公锤吸粉</div>
    <div class="form-group">
        <label for="moscaleMachineKey" class="col-md-2 control-label">设备Key</label>
        <div class="col-md-10">
            <input type="text" class="form-control" name="moscaleMachineKey" id="moscaleMachineKey" v-model="moscaleMachineKey">
            <span class="help-block">* 设备Key</span>
        </div>
    </div>
    <div class="form-group">
        <input type="hidden" class="form-control" name="moscaleLabel" value="">
        <label for="moscaleLabelList" class="col-md-2 control-label">场景</label>
        <div class="col-md-10" id="moscaleLabelList">
            <template v-if="labelData.length>0">
                <span v-for="label in labelData" 
                :class="label['selected'] ? 'selected':''" 
                @click="labelClicked(label)">
                    {{label['name']}}
                </span>
                <input type="hidden" name="moscaleLabel" :value="selectedLabelStr">
            </template>
            <template v-else>
                <div class="text-muted">&lt;暂无&gt;</div>
            </template>
        </div>
    </div>
    <div class="form-group">
        <input type="hidden" class="form-control" name="moscaleArea" value="">
        <label class="col-md-2 control-label">区域</label>
        <div class="col-md-10 area-list operate">
            <template v-if="regionData.length > 0">
                <select v-model="province_code" v-if="regionData && regionData.length > 0" name="province_code">
                    <option value="">&lt;请选择省份&gt;</option>
                    <option v-for="province in regionData" :value="province['code']">{{province['name']}}</option>
                </select>
                <select v-model="city_code" v-if="cityList && cityList.length > 0" name="city_code">
                    <option value="">&lt;请选择城市&gt;</option>
                    <option v-for="city in cityList" :value="city['code']">{{city['name']}}</option>
                </select>
                <select v-model="area_code" v-if="areaList && areaList.length > 0" name="area_code">
                    <option value="">&lt;请选择区域&gt;</option>
                    <option v-for="area in areaList" :value="area['code']">{{area['name']}}</option>
                </select>
            </template>
            <template v-else>
                <div class="text-muted">&lt;暂无&gt;</div>
            </template>
        </div>
    </div>
    </div>
    `;
    return {
        init: function(selector, params = {}) {
            new Vue({
                el: selector,
                template: html,
                data: {
                    moscaleMachineKey: params['moscaleMachineKey'] || '',
                    labelData: params['label'] || [],
                    savedLabelData: params['savedLabel'] || [],
                    regionData: params['region'] || [],
                    province_code: params['savedRegion'] && params['savedRegion']['province'] || '',
                    city_code: params['savedRegion'] && params['savedRegion']['city'] || '',
                    area_code: params['savedRegion'] && params['savedRegion']['area'] || '',
                },
                watch: {
                    province_code(p, o) {
                        if (o) {
                            this.city_code = '';
                        }
                    },
                    city_code(c, o) {
                        if (o) {
                            this.area_code = '';
                        }
                    }
                },
                computed: {
                    cityList() {
                        if (this.province_code) {
                            const p = this.regionData.find(i => i.code === this.province_code);
                            if (p && p.children) {
                                return p.children;
                            }
                        }
                        return [];
                    },
                    areaList() {
                        if (this.city_code) {
                            const c = this.cityList.find(i => i.code === this.city_code);
                            if (c && c.children) {
                                return c.children;
                            }
                        }
                        return [];
                    },
                    selectedLabelStr() {
                        const ids = [];
                        this.labelData.filter(l => l.selected).forEach(e => {
                            ids.push(e.label_id);
                        });
                        return ids.join(",");
                    }
                },
                created() {
                },
                mounted() {
                    if (this.labelData && this.labelData.length > 0 && this.savedLabelData && this.savedLabelData.length > 0) {
                        this.labelData.forEach(label => {
                            if (this.savedLabelData.indexOf(label['label_id']) !== -1) {
                                Vue.set(label, 'selected', true);
                            }
                        })
                    }
                },
                methods: {
                    labelClicked(label) {
                        const selected = label['selected'] ? true : false;
                        Vue.set(label, "selected", !selected);
                    }
                }
            })
        }
    }
})
