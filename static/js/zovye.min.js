define(function () {
    __zovyeApi = {
        url: undefined,
        resultFN:{},
    }

    __zovyeApi.setApiUrl = function (url) {
        __zovyeApi.url = url;
    }

    __zovyeApi.op = function (op, act) {
        __zovyeApi[op] = act;
    }
    
    __zovyeApi.default = function(op) {
        if (__zovyeApi.resultFN[op] && typeof __zovyeApi.resultFN[op].fn === 'function') {
            __zovyeApi.showResult({ op }, __zovyeApi.url, __zovyeApi.resultFN[op].loading, __zovyeApi.resultFN[op].fn);
        } else {
            __zovyeApi.showResult({ op });
        }   
    }

    __zovyeApi.result = function (op, act, loading = false) {
        __zovyeApi.resultFN[op] = {fn: act, loading: loading};
    }

    __zovyeApi.showResult = function (params, url, loading, cb) {
        loading && util.loading();
        $.getJSON(url || __zovyeApi.url, params).done(function (res) {
            loading && util.loaded();
            if (res) {
                if (typeof cb === 'function') {
                    if (cb(res)) {
                        return;
                    }
                }
                if (res.status) {
                    if (res.data && res.data.content) {
                        const dlg = util.dialog(res.data.title || '', res.data.content);
                        dlg.modal('show');
                    }
                }
                if (res.message && res.type) {
                    util.message(res.message, '', res.type);
                }
                if (res.data && res.data.msg) {
                    util.message(res.data.msg, '', res.status ? 'success' : 'error');
                }
            }
        }).fail(function () {
            loading && util.loaded();
        })
    }

    __zovyeApi.enableOp = function(selector = 'body', opName = 'op') {
        $(selector).on('click', '[data-' + opName + ']', function (e) {
            const op = $(this).data(opName);
            if (op) {
                if (__zovyeApi[op]) {
                    __zovyeApi[op]($(this), function() {
                        __zovyeApi.default(op);
                    });
                } else {
                    __zovyeApi.default(op);
                }
            }
            e.preventDefault();
        })
    }

    __zovyeApi.enableInputMask = function(selector = 'form', maskClass= "inputMask") {
        const maskE = $('<div title="点击查看">×××已隐藏×××</div>');
        $(selector + " ." + maskClass).each(function(){
            const self = $(this);
            if(self.val() || self.text()) {
                const x = maskE.clone();
                x.attr('class', self.attr('class')).click(function(){
                    x.hide();
                    self.show().focus();
                })
                x.insertBefore(self);
                self.removeClass(maskClass).hide();
                if (self.is('input')) {
                    self.blur(function(){
                    x.show();
                    self.hide();
                    })
                } else {
                    self.click(function(){
                        x.show();
                        self.hide();
                    })
                }
            }
        })
    }

    __zovyeApi.enableCopy = function(urlName = "url") {
        $('[data-' + urlName + ']').each(function(){
            util.clip(this, $(this).data(urlName));
        })
    }

    return __zovyeApi;
})
